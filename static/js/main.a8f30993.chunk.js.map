{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/api/api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","getMovie","title","url","fetch","then","responce","ok","Error","status","statusText","json","FindMovie","addMovie","useState","setTitle","setMovie","error","setError","isloading","setLoading","htmlFor","type","id","placeholder","value","onChange","e","target","disabled","onClick","data","Response","width","height","undefined","App","setMovies","newMovie","some","currentMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a8f30993.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const API_URL = 'https://www.omdbapi.com/';\r\nconst KEY = '24aecfbf';\r\n\r\nfunction request(url: string) {\r\n  return fetch(url)\r\n    .then(responce => {\r\n      if (!responce.ok) {\r\n        throw Error(`${responce.status} - ${responce.statusText}`);\r\n      }\r\n\r\n      return responce.json();\r\n    });\r\n}\r\n\r\nexport function getMovie(title: string): Promise<Movie> {\r\n  return request(`${API_URL}?apikey=${KEY}&t=${title}`);\r\n}\r\n","import React, { useState } from 'react';\r\nimport { getMovie } from '../api/api';\r\nimport './FindMovie.scss';\r\nimport { MovieCard } from '../MovieCard';\r\n\r\ntype Props = {\r\n  addMovie: (movies: Movie) => void,\r\n};\r\n\r\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\r\n  const [title, setTitle] = useState('');\r\n  const [movie, setMovie] = useState<Movie>();\r\n  const [error, setError] = useState(false);\r\n  const [isloading, setLoading] = useState(false);\r\n\r\n  const load = () => {\r\n    setLoading(true);\r\n    getMovie(title)\r\n      .then(data => {\r\n        if (data.Response === 'True') {\r\n          setMovie(data);\r\n          setTitle('');\r\n        } else {\r\n          setError(true);\r\n        }\r\n\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className=\"find-movie\">\r\n        <div className=\"field\">\r\n          <label className=\"label\" htmlFor=\"movie-title\">\r\n            Movie title\r\n            <div className=\"control\">\r\n              <input\r\n                type=\"text\"\r\n                id=\"movie-title\"\r\n                placeholder=\"Enter a title to search\"\r\n                className=\"input is-danger\"\r\n                value={title}\r\n                onChange={(e) => {\r\n                  setTitle(e.target.value);\r\n                  setError(false);\r\n                }}\r\n              />\r\n            </div>\r\n          </label>\r\n\r\n          <p className=\"help is-danger\">\r\n            {error && ('Can\\'t find a movie with such a title')}\r\n          </p>\r\n        </div>\r\n        <div className=\"field is-grouped\">\r\n          <div className=\"control\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"button is-light\"\r\n              disabled={title === ''}\r\n              onClick={load}\r\n            >\r\n              {isloading\r\n                ? (\r\n                  <img\r\n                    src=\"images/Spinner-3.gif\"\r\n                    width=\"30px\"\r\n                    height=\"30px\"\r\n                    alt=\"loading\"\r\n                  />\r\n                )\r\n                : 'Find a movie'}\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"control\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"button is-primary\"\r\n              disabled={movie === undefined}\r\n              onClick={() => {\r\n                if (movie) {\r\n                  addMovie(movie);\r\n                  setMovie(undefined);\r\n                }\r\n              }}\r\n            >\r\n              Add to the list\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n\r\n      <div className=\"container\">\r\n        <h2 className=\"title\">Preview</h2>\r\n        {movie && <MovieCard movie={movie} />}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useState } from 'react';\r\nimport './App.scss';\r\nimport { MoviesList } from './components/MoviesList';\r\nimport { FindMovie } from './components/FindMovie';\r\n\r\nexport const App: React.FC = () => {\r\n  const [movies, setMovies] = useState<Movie[]>([]);\r\n\r\n  const addMovie = (newMovie: Movie) => {\r\n    if (!movies.some(movie => movie.imdbID === newMovie.imdbID)) {\r\n      setMovies(currentMovies => [...currentMovies, newMovie]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <div className=\"page-content\">\r\n        <MoviesList movies={movies} />\r\n      </div>\r\n      <div className=\"sidebar\">\r\n        <FindMovie addMovie={addMovie} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}